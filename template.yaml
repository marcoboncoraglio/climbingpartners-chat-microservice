AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  climbingpartners-chat-microservice

Parameters:
  ConnectionsTableParam:
    Type: String
    Default: 'climbingpartners_connections'
    Description: (Required) The name of the new DynamoDB to store connection identifiers for each connected clients. Minimum 3 characters
    MinLength: 3
    MaxLength: 50
    AllowedPattern: ^[A-Za-z_]+$
    ConstraintDescription: 'Required. Can be characters and underscore only. No numbers or special characters allowed.'
  ChatRoomsTableParam:
    Type: String
    Default: 'climbingpartners_chatrooms'
    Description: (Required) The name of the new DynamoDB to store chat rooms and reference to messages. Minimum 3 characters
    MinLength: 3
    MaxLength: 50
    AllowedPattern: ^[A-Za-z_]+$
    ConstraintDescription: 'Required. Can be characters and underscore only. No numbers or special characters allowed.'
  MessagesTableParam:
    Type: String
    Default: 'climbingpartners_messages'
    Description: (Required) The name of the new DynamoDB to store messages. Minimum 3 characters
    MinLength: 3
    MaxLength: 50
    AllowedPattern: ^[A-Za-z_]+$
    ConstraintDescription: 'Required. Can be characters and underscore only. No numbers or special characters allowed.'

Resources:
  ClimbingPartnersChatWebSocket:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: ClimbingPartnersChatWebSocket
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: '$request.body.action'
  ConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref ClimbingPartnersChatWebSocket
      RouteKey: $connect
      AuthorizationType: NONE
      OperationName: ConnectRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref ConnectInteg
  ConnectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref ClimbingPartnersChatWebSocket
      Description: Connect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnConnectFunction.Arn}/invocations
  DisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref ClimbingPartnersChatWebSocket
      RouteKey: $disconnect
      AuthorizationType: NONE
      OperationName: DisconnectRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref DisconnectInteg
  DisconnectInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref ClimbingPartnersChatWebSocket
      Description: Disconnect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnDisconnectFunction.Arn}/invocations
  SendRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref ClimbingPartnersChatWebSocket
      RouteKey: sendmessage
      AuthorizationType: NONE
      OperationName: SendRoute
      Target: !Join
        - '/'
        - - 'integrations'
          - !Ref SendInteg
  SendInteg:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref ClimbingPartnersChatWebSocket
      Description: Send Integration
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SendMessageFunction.Arn}/invocations
  Deployment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
      - ConnectRoute
      - SendRoute
      - DisconnectRoute
    Properties:
      ApiId: !Ref ClimbingPartnersChatWebSocket
  Stage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      StageName: Staging
      Description: Staging Environment
      DeploymentId: !Ref Deployment
      ApiId: !Ref ClimbingPartnersChatWebSocket
  ConnectionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: 'connectionId'
        AttributeType: 'S'
      - AttributeName: 'userId'
        AttributeType: 'S'
      KeySchema:
      - AttributeName: 'connectionId'
        KeyType: 'HASH'
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      GlobalSecondaryIndexes:
        - IndexName: 'userId'
          KeySchema:
          - AttributeName: 'userId'
            KeyType: 'HASH'
          ProvisionedThroughput:
            ReadCapacityUnits: 5
            WriteCapacityUnits: 5
          Projection: 
            ProjectionType: 'ALL'
      SSESpecification:
        SSEEnabled: True
      TableName: !Ref ConnectionsTableParam
  ChatRoomsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: 'chatId'
        AttributeType: 'S'
      KeySchema:
      - AttributeName: 'chatId'
        KeyType: 'HASH'
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      SSESpecification:
        SSEEnabled: True
      TableName: !Ref ChatRoomsTableParam
  MessagesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: 'chatId'
        AttributeType: 'S'
      KeySchema:
      - AttributeName: 'chatId'
        KeyType: 'HASH'
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      SSESpecification:
        SSEEnabled: True
      TableName: !Ref MessagesTableParam
  OnConnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: server/
      Handler: app.onConnect
      MemorySize: 256
      Runtime: nodejs12.x
      Environment:
        Variables:
          CONNECTIONS_TABLE_NAME: !Ref ConnectionsTableParam
          CHATROOMS_TABLE_NAME: !Ref ChatRoomsTableParam
          MESSAGES_TABLE_NAME: !Ref MessagesTableParam
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ConnectionsTableParam
        - DynamoDBCrudPolicy:
            TableName: !Ref ChatRoomsTableParam
        - DynamoDBCrudPolicy:
            TableName: !Ref MessagesTableParam
  OnConnectPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - ClimbingPartnersChatWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref OnConnectFunction
      Principal: apigateway.amazonaws.com
  OnDisconnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: server/
      Handler: app.onDisconnect
      MemorySize: 256
      Runtime: nodejs12.x
      Environment:
        Variables:
          CONNECTIONS_TABLE_NAME: !Ref ConnectionsTableParam
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ConnectionsTableParam
  OnDisconnectPermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - ClimbingPartnersChatWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref OnDisconnectFunction
      Principal: apigateway.amazonaws.com
  SendMessageFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: server/
      Handler: app.sendMessage
      MemorySize: 256
      Runtime: nodejs12.x
      Environment:
        Variables:
          CONNECTIONS_TABLE_NAME: !Ref ConnectionsTableParam
          CHATROOMS_TABLE_NAME: !Ref ChatRoomsTableParam
          MESSAGES_TABLE_NAME: !Ref MessagesTableParam
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ConnectionsTableParam
        - DynamoDBCrudPolicy:
            TableName: !Ref ChatRoomsTableParam
        - DynamoDBCrudPolicy:
            TableName: !Ref MessagesTableParam
        - Statement:
            - Effect: Allow
              Action:
                - 'execute-api:ManageConnections'
              Resource:
                - !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ClimbingPartnersChatWebSocket}/*'
  SendMessagePermission:
    Type: AWS::Lambda::Permission
    DependsOn:
      - ClimbingPartnersChatWebSocket
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref SendMessageFunction
      Principal: apigateway.amazonaws.com

Outputs:
  ConnectionsTableArn:
    Description: 'Connections table ARN'
    Value: !GetAtt ConnectionsTable.Arn
  
  ChatRoomsTableArn:
    Description: 'Chat rooms table ARN'
    Value: !GetAtt ChatRoomsTable.Arn

  MessagesTableArn:
    Description: 'Messages table ARN'
    Value: !GetAtt MessagesTable.Arn

  OnConnectFunctionArn:
    Description: 'OnConnect function ARN'
    Value: !GetAtt OnConnectFunction.Arn

  OnDisconnectFunctionArn:
    Description: 'OnDisconnect function ARN'
    Value: !GetAtt OnDisconnectFunction.Arn

  SendMessageFunctionArn:
    Description: 'SendMessage function ARN'
    Value: !GetAtt SendMessageFunction.Arn

  WebSocketURI:
    Description: 'The WSS Protocol URI to connect to'
    Value:
      !Join [
        '',
        [
          'wss://',
          !Ref ClimbingPartnersChatWebSocket,
          '.execute-api.',
          !Ref 'AWS::Region',
          '.amazonaws.com/',
          !Ref 'Stage',
        ],
      ]
